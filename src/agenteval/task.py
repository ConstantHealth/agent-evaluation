from typing import Optional

from pydantic import BaseModel


class Task(BaseModel, validate_assignment=True):
    """A test case for an agent.

    Attributes:
        name: Name of the task
        steps: List of step to perform for the task
        expected_results: List of expected results for the task
        initial_prompt: Optional initial prompt
        max_turns: Maximum number of turns allowed for the task
    """

    name: str
    steps: list[str]
    expected_results: list[str]
    initial_prompt: Optional[str] = None
    max_turns: int


class TaskResult(BaseModel, arbitrary_types_allowed=True):
    """The tests results for a task, which will be generated by an evaluator.

    Attributes:
        name: Name of the task
        success: `True` if the test passed, otherwise `False`
        description: Description of the test result
        session: The session log
        trace: The trace log
    """

    name: str
    success: bool
    description: str
    session: list[tuple]
    trace: list[str]
